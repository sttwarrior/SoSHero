{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Front-End/projects/sosHero/soshero/src/dataVis.js\";\nimport React from 'react';\nimport { ResponsiveContainer, AreaChart, Area, XAxis, YAxis, Tooltip, Label, Legend } from 'recharts';\n\nconst DataVis = props => {\n  return React.createElement(\"div\", {\n    className: \"container-fluid\",\n    style: {\n      wordWrap: \"break-word\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(ResponsiveContainer, {\n    minHeight: \"750px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(AreaChart, {\n    data: props.compList,\n    margin: {\n      top: 50,\n      right: 20,\n      left: 20,\n      bottom: 50\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(XAxis, {\n    dataKey: \"name\",\n    type: \"category\",\n    textAnchor: \"end\",\n    scaleToFit: true,\n    height: 120,\n    width: 20,\n    angle: -75,\n    interval: 0,\n    minTickGap: 10,\n    wrap: true,\n    tickFormatter: val => val.replace(/ \\((.*)/g, \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    tickLine: false,\n    type: \"number\",\n    domain: [0, 600],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Label, {\n    value: \"Overall Power\",\n    offset: -5,\n    position: \"insideLeft\",\n    angle: \"-90\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(Tooltip, {\n    itemSorter: () => -1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Legend, {\n    align: \"center\",\n    verticalAlign: \"top\",\n    iconType: \"circle\",\n    height: 40,\n    iconSize: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Area, {\n    type: \"monotone\",\n    dataKey: \"intelligence\",\n    stackId: \"1\",\n    connectNulls: true,\n    stroke: \"#41bebc\",\n    fill: \"#41bebc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Area, {\n    type: \"monotone\",\n    dataKey: \"strength\",\n    stackId: \"1\",\n    connectNulls: true,\n    stroke: \"#3884d8\",\n    fill: \"#3884d8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Area, {\n    type: \"monotone\",\n    dataKey: \"speed\",\n    stackId: \"1\",\n    connectNulls: true,\n    stroke: \"#d9b026\",\n    fill: \"#d9b026\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Area, {\n    type: \"monotone\",\n    dataKey: \"durability\",\n    stackId: \"1\",\n    connectNulls: true,\n    stroke: \"#5ba45b\",\n    fill: \"#5ba45b\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Area, {\n    type: \"monotone\",\n    dataKey: \"power\",\n    stackId: \"1\",\n    connectNulls: true,\n    stroke: \"#dd2a22\",\n    fill: \"#dd2a22\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Area, {\n    type: \"monotone\",\n    dataKey: \"combat\",\n    stackId: \"1\",\n    connectNulls: true,\n    stroke: \"#873ec1\",\n    fill: \"#873ec1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }))));\n};\n\nexport default DataVis;","map":{"version":3,"sources":["/mnt/c/Front-End/projects/sosHero/soshero/src/dataVis.js"],"names":["React","ResponsiveContainer","AreaChart","Area","XAxis","YAxis","Tooltip","Label","Legend","DataVis","props","wordWrap","compList","top","right","left","bottom","val","replace"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,mBAAR,EAA6BC,SAA7B,EAAwCC,IAAxC,EAA8CC,KAA9C,EAAqDC,KAArD,EAA4DC,OAA5D,EAAqEC,KAArE,EAA4EC,MAA5E,QAAyF,UAAzF;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACvB,SACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA,oBAAC,mBAAD;AAAsB,IAAA,SAAS,EAAC,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAED,KAAK,CAACE,QADhB;AAEI,IAAA,MAAM,EAAE;AAACC,MAAAA,GAAG,EAAE,EAAN;AAAUC,MAAAA,KAAK,EAAE,EAAjB;AAAqBC,MAAAA,IAAI,EAAE,EAA3B;AAA+BC,MAAAA,MAAM,EAAE;AAAvC,KAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKA,oBAAC,KAAD;AAAQ,IAAA,OAAO,EAAC,MAAhB;AACQ,IAAA,IAAI,EAAC,UADb;AAEQ,IAAA,UAAU,EAAC,KAFnB;AAGQ,IAAA,UAAU,EAAE,IAHpB;AAIQ,IAAA,MAAM,EAAE,GAJhB;AAKQ,IAAA,KAAK,EAAE,EALf;AAMQ,IAAA,KAAK,EAAE,CAAC,EANhB;AAOQ,IAAA,QAAQ,EAAE,CAPlB;AAQQ,IAAA,UAAU,EAAE,EARpB;AASQ,IAAA,IAAI,EAAE,IATd;AAUQ,IAAA,aAAa,EAAEC,GAAG,IAAIA,GAAG,CAACC,OAAJ,CAAY,UAAZ,EAAuB,EAAvB,CAV9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,EAkBA,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAE,KAAjB;AAAwB,IAAA,IAAI,EAAC,QAA7B;AAAsC,IAAA,MAAM,EAAE,CAAC,CAAD,EAAI,GAAJ,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC,eAAb;AAA6B,IAAA,MAAM,EAAE,CAAC,CAAtC;AAAyC,IAAA,QAAQ,EAAC,YAAlD;AAA+D,IAAA,KAAK,EAAC,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAlBA,EAuBA,oBAAC,OAAD;AAAS,IAAA,UAAU,EAAE,MAAM,CAAC,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBA,EAwBA,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,aAAa,EAAC,KAArC;AAA2C,IAAA,QAAQ,EAAC,QAApD;AAA6D,IAAA,MAAM,EAAE,EAArE;AAAyE,IAAA,QAAQ,EAAE,EAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBA,EA2BA,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC,cAA9B;AAA6C,IAAA,OAAO,EAAC,GAArD;AAAyD,IAAA,YAAY,EAAE,IAAvE;AAA6E,IAAA,MAAM,EAAC,SAApF;AAA8F,IAAA,IAAI,EAAC,SAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BA,EA4BA,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC,UAA9B;AAA6C,IAAA,OAAO,EAAC,GAArD;AAAyD,IAAA,YAAY,EAAE,IAAvE;AAA6E,IAAA,MAAM,EAAC,SAApF;AAA8F,IAAA,IAAI,EAAC,SAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BA,EA6BA,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC,OAA9B;AAA6C,IAAA,OAAO,EAAC,GAArD;AAAyD,IAAA,YAAY,EAAE,IAAvE;AAA6E,IAAA,MAAM,EAAC,SAApF;AAA8F,IAAA,IAAI,EAAC,SAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BA,EA8BA,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC,YAA9B;AAA6C,IAAA,OAAO,EAAC,GAArD;AAAyD,IAAA,YAAY,EAAE,IAAvE;AAA6E,IAAA,MAAM,EAAC,SAApF;AAA8F,IAAA,IAAI,EAAC,SAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BA,EA+BA,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC,OAA9B;AAA6C,IAAA,OAAO,EAAC,GAArD;AAAyD,IAAA,YAAY,EAAE,IAAvE;AAA6E,IAAA,MAAM,EAAC,SAApF;AAA8F,IAAA,IAAI,EAAC,SAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BA,EAgCA,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC,QAA9B;AAA6C,IAAA,OAAO,EAAC,GAArD;AAAyD,IAAA,YAAY,EAAE,IAAvE;AAA6E,IAAA,MAAM,EAAC,SAApF;AAA8F,IAAA,IAAI,EAAC,SAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCA,CAHJ,CAFA,CADJ;AA4CH,CA7CD;;AA+CA,eAAeT,OAAf","sourcesContent":["import React from 'react'\r\nimport {ResponsiveContainer, AreaChart, Area, XAxis, YAxis, Tooltip, Label, Legend} from 'recharts'\r\n\r\n\r\nconst DataVis = (props) => {\r\n    return (\r\n        <div className=\"container-fluid\" style={{wordWrap: \"break-word\"}}>\r\n        {/* create responsive container which adjust the whole chart to current media */}\r\n        <ResponsiveContainer  minHeight=\"750px\">\r\n            \r\n            {/* setting margin and chartype */}\r\n            <AreaChart\r\n                data={props.compList}\r\n                margin={{top: 50, right: 20, left: 20, bottom: 50}}\r\n            >\r\n\r\n            <XAxis  dataKey=\"name\" \r\n                    type=\"category\" \r\n                    textAnchor=\"end\"\r\n                    scaleToFit={true}\r\n                    height={120}\r\n                    width={20}\r\n                    angle={-75}\r\n                    interval={0}\r\n                    minTickGap={10}\r\n                    wrap={true}\r\n                    tickFormatter={val => val.replace(/ \\((.*)/g,\"\")}\r\n            />\r\n\r\n            <YAxis tickLine={false} type=\"number\" domain={[0, 600]} > \r\n                <Label value=\"Overall Power\" offset={-5} position=\"insideLeft\" angle=\"-90\" />\r\n            </YAxis>\r\n\r\n            {/* change the order of data set*/}\r\n            <Tooltip itemSorter={() => -1} />\r\n            <Legend align=\"center\" verticalAlign=\"top\" iconType=\"circle\" height={40} iconSize={10} />\r\n\r\n            {/* plt dataset */}\r\n            <Area type=\"monotone\" dataKey=\"intelligence\" stackId=\"1\" connectNulls={true} stroke=\"#41bebc\" fill=\"#41bebc\" />\r\n            <Area type=\"monotone\" dataKey=\"strength\"     stackId=\"1\" connectNulls={true} stroke=\"#3884d8\" fill=\"#3884d8\" />\r\n            <Area type=\"monotone\" dataKey=\"speed\"        stackId=\"1\" connectNulls={true} stroke=\"#d9b026\" fill=\"#d9b026\" />\r\n            <Area type=\"monotone\" dataKey=\"durability\"   stackId=\"1\" connectNulls={true} stroke=\"#5ba45b\" fill=\"#5ba45b\" />\r\n            <Area type=\"monotone\" dataKey=\"power\"        stackId=\"1\" connectNulls={true} stroke=\"#dd2a22\" fill=\"#dd2a22\" />\r\n            <Area type=\"monotone\" dataKey=\"combat\"       stackId=\"1\" connectNulls={true} stroke=\"#873ec1\" fill=\"#873ec1\" />\r\n            </AreaChart>\r\n            \r\n        </ResponsiveContainer>\r\n        </div>\r\n    ) \r\n}\r\n  \r\nexport default DataVis"]},"metadata":{},"sourceType":"module"}