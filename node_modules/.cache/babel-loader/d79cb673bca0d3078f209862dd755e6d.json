{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Front-End/projects/sosHero/soshero/src/App.js\";\nimport React, { useState } from 'react';\nimport SearchAPI from \"./searchAPI\";\nimport CurList from \"./curList\"; // I prefer functinal components for its terse and elegant presentation\n\nconst App = () => {\n  //charDict centralizes user's hero list as a dictionary\n  //charDict will be synchronized to all the other components \n  const [charDict, setDict] = useState({}); //pass this function to API searcher to update \n\n  const addChars = chars => {\n    let dict = {};\n    chars.forEach(char => {\n      dict[char.name] = {\n        pwrStat: char.pwrStat,\n        imgLnk: char.imgLnk\n      };\n    });\n    setDict({ ...charDict,\n      ...dict\n    });\n  }; //pass this function to child component \"heroList\" to remove heros and render the chart\n\n\n  const rmvChars = chars => {\n    let dict = JSON.parse(JSON.stringify(charDict)); //clone the existent charDict\n\n    chars.forEach(char => {\n      delete dict[char.name];\n    });\n    setDict(dict);\n  }; //use Bootstrap library to reach responsive design\n  //the two main components are SearchAPI and CurList\n\n\n  return React.createElement(\"div\", {\n    className: \"container bg-light py-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-10 mx-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"display-4 my-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Super Hero Search Engine\"), React.createElement(\"h5\", {\n    className: \"mt-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Find your favorite hero(s) and compare their power with other heros\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"1. Input a hero's name in the search bar and then hit search button\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), \"2. Add the hero(s) in your list. (We only serve justice, so bad heros are out.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), \"3. Select heros in your list and customize a powerStat comparison for them!\"), React.createElement(SearchAPI, {\n    addChars: chars => addChars(chars),\n    charDict: charDict,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(CurList, {\n    rmvChars: chars => rmvChars(chars),\n    charDict: charDict,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/mnt/c/Front-End/projects/sosHero/soshero/src/App.js"],"names":["React","useState","SearchAPI","CurList","App","charDict","setDict","addChars","chars","dict","forEach","char","name","pwrStat","imgLnk","rmvChars","JSON","parse","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAEA;;AACA,MAAMC,GAAG,GAAG,MAAM;AAEhB;AACA;AACA,QAAM,CAACC,QAAD,EAAWC,OAAX,IAAsBL,QAAQ,CAAC,EAAD,CAApC,CAJgB,CAMhB;;AACA,QAAMM,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAIC,IAAI,GAAG,EAAX;AACAD,IAAAA,KAAK,CAACE,OAAN,CAAcC,IAAI,IAAI;AAClBF,MAAAA,IAAI,CAACE,IAAI,CAACC,IAAN,CAAJ,GAAkB;AAChBC,QAAAA,OAAO,EAAEF,IAAI,CAACE,OADE;AAEhBC,QAAAA,MAAM,EAAEH,IAAI,CAACG;AAFG,OAAlB;AAIH,KALD;AAMAR,IAAAA,OAAO,CAAC,EAAC,GAAGD,QAAJ;AAAc,SAAGI;AAAjB,KAAD,CAAP;AACD,GATD,CAPgB,CAkBhB;;;AACA,QAAMM,QAAQ,GAAIP,KAAD,IAAW;AAC1B,QAAIC,IAAI,GAAGO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeb,QAAf,CAAX,CAAX,CAD0B,CACsB;;AAChDG,IAAAA,KAAK,CAACE,OAAN,CAAcC,IAAI,IAAI;AAAC,aAAOF,IAAI,CAACE,IAAI,CAACC,IAAN,CAAX;AAAuB,KAA9C;AACAN,IAAAA,OAAO,CAACG,IAAD,CAAP;AACD,GAJD,CAnBgB,CAyBhB;AACA;;;AACA,SACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EAFF,EAGE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4EACmE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADnE,oFAE8E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF9E,gFAHF,EAQE,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAKD,KAAD,IAAWD,QAAQ,CAACC,KAAD,CAA1C;AAAmD,IAAA,QAAQ,EAAIH,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAKG,KAAD,IAAWO,QAAQ,CAACP,KAAD,CAAxC;AAAiD,IAAA,QAAQ,EAAIH,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,CADF,CADF;AAiBD,CA5CD;;AA8CA,eAAeD,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport SearchAPI from \"./searchAPI\"\nimport CurList from \"./curList\"\n\n// I prefer functinal components for its terse and elegant presentation\nconst App = () => {\n\n  //charDict centralizes user's hero list as a dictionary\n  //charDict will be synchronized to all the other components \n  const [charDict, setDict] = useState({})\n  \n  //pass this function to API searcher to update \n  const addChars = (chars) => {\n    let dict = {}\n    chars.forEach(char => {\n        dict[char.name] = {\n          pwrStat: char.pwrStat,\n          imgLnk: char.imgLnk,\n        }\n    })\n    setDict({...charDict, ...dict})\n  }\n\n  //pass this function to child component \"heroList\" to remove heros and render the chart\n  const rmvChars = (chars) => {\n    let dict = JSON.parse(JSON.stringify(charDict)) //clone the existent charDict\n    chars.forEach(char => {delete dict[char.name]})\n    setDict(dict)\n  }\n\n  //use Bootstrap library to reach responsive design\n  //the two main components are SearchAPI and CurList\n  return (\n    <div className=\"container bg-light py-3\">\n      <div className=\"row\">\n        <div className=\"col-10 mx-auto\">\n          <h4 className=\"display-4 my-3\">Super Hero Search Engine</h4>\n          <h5 className=\"mt-2\">Find your favorite hero(s) and compare their power with other heros</h5>\n          <p className=\"lead\">\n          1. Input a hero's name in the search bar and then hit search button<br/>\n          2. Add the hero(s) in your list. (We only serve justice, so bad heros are out.<br/>\n          3. Select heros in your list and customize a powerStat comparison for them!\n          </p>\n          <SearchAPI addChars = {(chars) => addChars(chars)} charDict = {charDict}/>\n          <CurList rmvChars = {(chars) => rmvChars(chars)} charDict = {charDict} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}