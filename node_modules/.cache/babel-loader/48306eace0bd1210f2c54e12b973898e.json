{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Front-End/projects/sosHero/soshero/src/heroList.js\";\nimport React, { useState, useEffect } from \"react\"; //when clicked, this component will appear in different visual effect and \n//update its grand-parent component, searchAPI or curList\n\nconst Hero = props => {\n  const [heroSel, selHero] = useState(false);\n  useEffect(() => {\n    props.update(props.listID, heroSel);\n  }); //update the state to its grand-parent\n  //if the hero does not have a online photo, use the local one\n\n  const imgLnk = props.hero.imgLnk !== \"\" ? props.hero.imgLnk : require(\"./img/unknown.jpg\");\n  return React.createElement(\"div\", {\n    className: \"col-6 col-sm-4 col-md-3 col-lg-2 text-center p-2\",\n    style: {\n      backgroundColor: heroSel ? \"#e1f0e9\" : \"#f4f9f7\"\n    },\n    onClick: () => selHero(!heroSel),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, heroSel ? React.createElement(\"span\", {\n    className: \"text-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"SELECTED\") : React.createElement(\"span\", {\n    className: \"text-secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"UNSELECTED\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    className: \"rounded mx-auto\",\n    src: imgLnk,\n    alt: props.hero.title,\n    width: \"100%\",\n    height: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), props.hero.name);\n}; //to render multiple <Hero /> components\n\n\nconst HeroList = props => {\n  return props.charList.map((char, index) => {\n    return React.createElement(Hero, {\n      hero: char,\n      key: char.name,\n      listID: index,\n      update: (listID, sel) => props.listUpdater(listID, sel),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    });\n  });\n};\n\nexport default HeroList;","map":{"version":3,"sources":["/mnt/c/Front-End/projects/sosHero/soshero/src/heroList.js"],"names":["React","useState","useEffect","Hero","props","heroSel","selHero","update","listID","imgLnk","hero","require","backgroundColor","title","name","HeroList","charList","map","char","index","sel","listUpdater"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC,C,CAEA;AACA;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAEpB,QAAM,CAACC,OAAD,EAAUC,OAAV,IAAqBL,QAAQ,CAAC,KAAD,CAAnC;AACAC,EAAAA,SAAS,CAAC,MAAM;AAACE,IAAAA,KAAK,CAACG,MAAN,CAAaH,KAAK,CAACI,MAAnB,EAA2BH,OAA3B;AAAoC,GAA5C,CAAT,CAHoB,CAGmC;AAEvD;;AACA,QAAMI,MAAM,GAAIL,KAAK,CAACM,IAAN,CAAWD,MAAX,KAAsB,EAAvB,GAA4BL,KAAK,CAACM,IAAN,CAAWD,MAAvC,GAAgDE,OAAO,CAAC,mBAAD,CAAtE;AACA,SACI;AAAK,IAAA,SAAS,EAAE,kDAAhB;AACK,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAAEP,OAAO,GAAC,SAAD,GAAW;AAApC,KADZ;AAEK,IAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,CAACD,OAAF,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKA,OAAO,GAAC;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAD,GAA6C;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJzD,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,GAAG,EAAEI,MAAtC;AAA8C,IAAA,GAAG,EAAEL,KAAK,CAACM,IAAN,CAAWG,KAA9D;AAAqE,IAAA,KAAK,EAAE,MAA5E;AAAoF,IAAA,MAAM,EAAE,MAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAQKT,KAAK,CAACM,IAAN,CAAWI,IARhB,CADJ;AAYH,CAnBD,C,CAqBA;;;AACA,MAAMC,QAAQ,GAAIX,KAAD,IAAW;AACxB,SAAOA,KAAK,CAACY,QAAN,CAAeC,GAAf,CAAoB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxC,WAAO,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAED,IAAZ;AAAkB,MAAA,GAAG,EAAEA,IAAI,CAACJ,IAA5B;AAAkC,MAAA,MAAM,EAAEK,KAA1C;AAAiD,MAAA,MAAM,EAAE,CAACX,MAAD,EAASY,GAAT,KAAiBhB,KAAK,CAACiB,WAAN,CAAkBb,MAAlB,EAA0BY,GAA1B,CAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFM,CAAP;AAGH,CAJD;;AAKA,eAAeL,QAAf","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\n\r\n//when clicked, this component will appear in different visual effect and \r\n//update its grand-parent component, searchAPI or curList\r\nconst Hero = (props) => {\r\n\r\n    const [heroSel, selHero] = useState(false)\r\n    useEffect(() => {props.update(props.listID, heroSel)}) //update the state to its grand-parent\r\n\r\n    //if the hero does not have a online photo, use the local one\r\n    const imgLnk = (props.hero.imgLnk !== \"\")? props.hero.imgLnk : require(\"./img/unknown.jpg\")\r\n    return(\r\n        <div className={\"col-6 col-sm-4 col-md-3 col-lg-2 text-center p-2\"}\r\n             style={{backgroundColor: heroSel?\"#e1f0e9\":\"#f4f9f7\"}} \r\n             onClick={() => selHero(!heroSel)}\r\n        >\r\n            {heroSel?<span className=\"text-dark\">SELECTED</span>:<span className=\"text-secondary\">UNSELECTED</span>}\r\n            <br/>\r\n            <img className=\"rounded mx-auto\" src={imgLnk} alt={props.hero.title} width={\"100%\"} height={\"auto\"}/>\r\n            <br/>\r\n            {props.hero.name}\r\n        </div>\r\n    )\r\n}\r\n\r\n//to render multiple <Hero /> components\r\nconst HeroList = (props) => {\r\n    return props.charList.map( (char, index) => {\r\n        return <Hero hero={char} key={char.name} listID={index} update={(listID, sel) => props.listUpdater(listID, sel)}/>\r\n    })\r\n}\r\nexport default HeroList"]},"metadata":{},"sourceType":"module"}